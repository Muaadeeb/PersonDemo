@page "/person-list"

@using Business.Interfaces
@using BlazorServer.Helper
@using ModelDTOs

@inject IPersonManager _personManager
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

<div class="row mt-4">
    <div class="col">
        <h4 class="card-title text-info">A List of People</h4>
    </div>

    <div class="col-3 offset-1">
        <NavLink href="person/create" class="btn btn-info form-control">Add New Person</NavLink>
    </div>
</div>

<div class="row mt-4">
    <div class="col-12">
        <table class="table table-bordered table-hover">
            <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Age</th>
                <th>Date of Birth</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
                @if (Persons.Any())
                {
                    @foreach (var person in Persons)
                    {
                        <tr>
                            <td>@person.PersonId</td>
                            <td>@person.FirstName</td>
                            <td>@person.LastName</td>
                            <td>@person.Age</td>
                            <td>@person.DateOfBirth</td>
                            <td>
                                <NavLink href="@($"person/edit/{person.PersonId}")" class="btn btn-primary">Edit</NavLink>
                                <button class="btn btn-danger" @onclick="()=> HandleDelete(person.PersonId)">Delete</button>
                            </td>
                        </tr>
                    }

                }
                else
                {
                    <tr>
                        <td colspan="5">No Records found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@code {

    public IEnumerable<PersonDTO> Persons { get; set; } = new List<PersonDTO>();
    private int? DeletePersonId { get; set; } = null;


    protected override async Task OnInitializedAsync()
    {
        Persons = await _personManager.GetAllPersonsAsync();
    }

    private async Task HandleDelete(int personId)
    {
        DeletePersonId = personId;

        await _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

}
